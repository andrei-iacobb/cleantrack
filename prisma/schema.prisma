generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin   Boolean  @default(false)
  role      UserRole @default(CLEANER)
  tasks     Task[]   @relation("UserTasks")

  @@map("users")
}

model Task {
  id          String       @id @default(cuid())
  title       String
  description String?
  status      TaskStatus   @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userId      String
  user        User         @relation("UserTasks", fields: [userId], references: [id])

  @@map("tasks")
}

model Room {
  id          String         @id @default(cuid())
  name        String         @unique
  description String?
  floor       String?
  type        RoomType       @default(OTHER)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  tasks       CleaningTask[]
  schedules   RoomSchedule[]

  @@map("rooms")
}

model Equipment {
  id             String              @id @default(cuid())
  name           String              @unique
  description    String?
  location       String?
  type           EquipmentType       @default(OTHER)
  model          String?
  serialNumber   String?
  purchaseDate   DateTime?
  warrantyExpiry DateTime?
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  schedules      EquipmentSchedule[]

  @@map("equipment")
}

model CleaningTask {
  id                String   @id @default(cuid())
  taskDescription   String
  frequency         String
  estimatedDuration String
  status            String   @default("pending")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  roomId            String?
  room              Room?    @relation(fields: [roomId], references: [id])

  @@unique([roomId, taskDescription])
  @@map("cleaning_tasks")
}

model Schedule {
  id                 String              @id @default(cuid())
  title              String              @unique
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  detectedFrequency  String?
  suggestedFrequency ScheduleFrequency?
  equipment          EquipmentSchedule[]
  rooms              RoomSchedule[]
  tasks              ScheduleTask[]

  @@map("schedules")
}

model ScheduleTask {
  id              String   @id @default(cuid())
  description     String
  frequency       String?
  scheduleId      String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  additionalNotes String?
  schedule        Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)

  @@map("schedule_tasks")
}

model RoomSchedule {
  id             String                      @id @default(cuid())
  roomId         String
  scheduleId     String
  frequency      ScheduleFrequency
  startDate      DateTime                    @default(now())
  lastCompleted  DateTime?
  nextDue        DateTime
  status         ScheduleStatus              @default(PENDING)
  createdAt      DateTime                    @default(now())
  updatedAt      DateTime                    @updatedAt
  completionLogs RoomScheduleCompletionLog[]
  room           Room                        @relation(fields: [roomId], references: [id], onDelete: Cascade)
  schedule       Schedule                    @relation(fields: [scheduleId], references: [id], onDelete: Cascade)

  @@unique([roomId, scheduleId])
  @@map("room_schedules")
}

model EquipmentSchedule {
  id             String                           @id @default(cuid())
  equipmentId    String
  scheduleId     String
  frequency      ScheduleFrequency
  startDate      DateTime                         @default(now())
  lastCompleted  DateTime?
  nextDue        DateTime
  status         ScheduleStatus                   @default(PENDING)
  createdAt      DateTime                         @default(now())
  updatedAt      DateTime                         @updatedAt
  completionLogs EquipmentScheduleCompletionLog[]
  equipment      Equipment                        @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  schedule       Schedule                         @relation(fields: [scheduleId], references: [id], onDelete: Cascade)

  @@unique([equipmentId, scheduleId])
  @@map("equipment_schedules")
}

model RoomScheduleCompletionLog {
  id             String       @id @default(cuid())
  roomScheduleId String
  completedAt    DateTime     @default(now())
  notes          String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  completedTasks Json         @default("[]")
  roomSchedule   RoomSchedule @relation(fields: [roomScheduleId], references: [id], onDelete: Cascade)

  @@map("room_schedule_completion_logs")
}

model EquipmentScheduleCompletionLog {
  id                  String            @id @default(cuid())
  equipmentScheduleId String
  completedAt         DateTime          @default(now())
  notes               String?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  completedTasks      Json              @default("[]")
  equipmentSchedule   EquipmentSchedule @relation(fields: [equipmentScheduleId], references: [id], onDelete: Cascade)

  @@map("equipment_schedule_completion_logs")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum RoomType {
  OFFICE
  MEETING_ROOM
  BATHROOM
  KITCHEN
  LOBBY
  STORAGE
  OTHER
  BEDROOM
  LOUNGE
}

enum EquipmentType {
  // Cleaning Equipment
  VACUUM_CLEANER
  FLOOR_SCRUBBER
  CARPET_CLEANER
  PRESSURE_WASHER
  WINDOW_CLEANING
  CLEANING_CART
  
  // Building Systems
  HVAC_SYSTEM
  AIR_PURIFIER
  
  // Kitchen Equipment
  DISHWASHER
  WASHING_MACHINE
  DRYER
  MICROWAVE
  REFRIGERATOR
  COFFEE_MACHINE
  KITCHEN_EQUIPMENT
  
  // Office Equipment
  PRINTER
  COMPUTER
  PROJECTOR
  
  // Residential/Healthcare Equipment
  WHEELCHAIR
  SARA_STEADY
  HOIST
  SHOWER_CHAIR
  TOILET_FRAME
  WALKING_FRAME
  WALKING_STICK
  ZIMMER_FRAME
  HOSPITAL_BED
  COMMODE
  MOBILITY_SCOOTER
  PATIENT_LIFT
  TRANSFER_BOARD
  STANDING_AID
  ROLLATOR
  GRAB_RAILS
  BATH_LIFT
  RISE_RECLINE_CHAIR
  PROFILING_BED
  MATTRESS
  CUSHION
  
  // General
  INDUSTRIAL_EQUIPMENT
  OTHER
}

enum ScheduleFrequency {
  DAILY
  WEEKLY
  BIWEEKLY
  MONTHLY
  QUARTERLY
  YEARLY
  CUSTOM
}

enum ScheduleStatus {
  PENDING
  OVERDUE
  COMPLETED
  PAUSED
}

enum UserRole {
  ADMIN
  CLEANER
}
