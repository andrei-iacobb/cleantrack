services:
  web:
    build: .
    container_name: cleantrack_web
    restart: always
    ports:
      - "0.0.0.0:3000:3000"  # Bind to all interfaces for external access
    env_file:
      - .env  
    environment:
      # Override only the database URL for Docker (others come from .env)
      - DATABASE_URL=postgresql://cleantrack_user:CleanTrack2024SecurePass@db:5432/cleantrack
      # Override the NextAuth URL for external access
      - NEXTAUTH_URL=http://10.60.1.195:3000
      # Override NODE_ENV for Docker development
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cleantrack_network

  db:
    image: postgres:15
    container_name: cleantrack_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: cleantrack_user
      POSTGRES_PASSWORD: CleanTrack2024SecurePass
      POSTGRES_DB: cleantrack
      # PostgreSQL configuration for better performance
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - cleantrack_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cleantrack_user -d cleantrack"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cleantrack_network

volumes:
  cleantrack_data:

networks:
  cleantrack_network:
    driver: bridge