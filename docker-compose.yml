services:
  web:
    build: .
    container_name: cleantrack_web
    restart: always
    ports:
      - "0.0.0.0:3000:3000"  # Bind to all interfaces for external access
    environment:
      - DATABASE_URL=your_existing_database_url_here  # Replace with your actual DB URL
      - NEXTAUTH_SECRET=your-secret-key-here-change-this-in-production
      - NEXTAUTH_URL=http://10.60.1.195:3000  # Use the actual IP
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    # Remove depends_on since we're using external database
    networks:
      - cleantrack_network

  # Comment out the db service if using external database
  # db:
  #   image: postgres:15
  #   container_name: cleantrack_db
  #   restart: always
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: secret
  #     POSTGRES_DB: cleantrack
  #   volumes:
  #     - cleantrack_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U admin -d cleantrack"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - cleantrack_network

volumes:
  cleantrack_data:

networks:
  cleantrack_network:
    driver: bridge